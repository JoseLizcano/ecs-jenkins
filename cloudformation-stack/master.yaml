AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template deploys a Jenkins project

  Author: Felippe Costa <felippemsc@gmail.com>

Parameters:
  ECSClusterInstanceType:
    Description: Name of the instance class for the EC2 machine running the cluster.
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t3.nano
    - t3.micro
    - t3.small
    - t3.medium
    - t3.large
    - t3.xlarge
    - t3.2xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - m5d.large
    - m5d.xlarge
    - m5d.2xlarge
    - m5d.4xlarge
    - m5d.12xlarge
    - m5d.24xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    - c5d.large
    - c5d.xlarge
    - c5d.2xlarge
    - c5d.4xlarge
    - c5d.9xlarge
    - c5d.18xlarge

  JenkinsImageTag:
    Type: String
    Description: Imate tag for the Jenkins deploy

  JenkinsRepository:
    Type: String
    Description: Jenkins repositoy name

  BucketName:
    Type: String
    Description: The name of the Bucket created with the base resources

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/infra/vpc.yaml"
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      #!ImportValue my-jenkins-infra-CFNBucket
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/infra/security-groups.yaml"
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/infra/ecs.yaml"
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: !Ref ECSClusterInstanceType
        DesiredCapacity: 1
        KeyPair: my-key-pair
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        VPC: !GetAtt VPC.Outputs.VPC

  ApplicationLoadBalancer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/infra/load-balancers.yaml"
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
        PublicSubnets: !GetAtt VPC.Outputs.PublicSubnets
        VPC: !GetAtt VPC.Outputs.VPC

  JenkinsService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://s3.amazonaws.com/${BucketName}/service/jenkins.yaml"
      Parameters:
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 1
        ContainerRepository: !Ref JenkinsRepository
        ContainerImageTag: !Ref JenkinsImageTag
        Listener: !GetAtt ApplicationLoadBalancer.Outputs.Listener
        VPC: !GetAtt VPC.Outputs.VPC

Outputs:
  #LoadBalancer Outputs
  PublicLoadBalancerUrl:
    Description: A URL do Application Load Balancer
    Value: !GetAtt ApplicationLoadBalancer.Outputs.PublicLoadBalancerUrl